{%- assign collection_sort_by = collection.sort_by | default: collection.default_sort_by -%}
{%- assign active_filters_count = 0 -%}

{%- for filter in collection.filters -%}
  {%- if filter.type == 'list' -%}
    {%- assign active_filters_count = active_filters_count | plus: filter.active_values.size -%}
  {%- elsif filter.type == 'price_range' and filter.min_value.value or filter.max_value.value -%}
    {%- assign active_filters_count = active_filters_count | plus: 1 -%}
  {%- endif -%}
{%- endfor -%}

<style>
  #shopify-section-{{ section.id }} {
    --section-products-per-row: {{ section.settings.mobile_products_per_row | times: 1 }};
  }
  .promotion-banner {grid-column-start: span var(--section-products-per-row);}

  @media screen and (min-width: 741px) {
    #shopify-section-{{ section.id }} {
      {%- assign remainder_for_two = section.settings.products_per_page | modulo: 2 -%}
      {%- assign remainder_for_desktop_count = section.settings.products_per_page | modulo: section.settings.desktop_products_per_row -%}

      --section-products-per-row: {% if remainder_for_two == 0 and remainder_for_desktop_count == 0 %}2{% else %}3{% endif %};
    }
  }

  {%- if section.settings.filter_position == 'drawer' -%}
    @media screen and (min-width: 1200px) {
      #shopify-section-{{ section.id }} {
        --section-products-per-row: {{ section.settings.desktop_products_per_row }};
      }
    }
  {%- else -%}
    @media screen and (min-width: 1400px) {
      #shopify-section-{{ section.id }} {
        --section-products-per-row: {{ section.settings.desktop_products_per_row }};
      }
    }
  {%- endif -%}

  {%- for block in section.blocks -%}
    #block-{{ section.id }}-{{ block.id }} {
      --heading-color: {{ block.settings.text_color.red }}, {{ block.settings.text_color.green }}, {{ block.settings.text_color.blue }};
      --text-color: {{ block.settings.text_color.red }}, {{ block.settings.text_color.green }}, {{ block.settings.text_color.blue }};
      --section-block-background: {{ block.settings.background.red }}, {{ block.settings.background.green }}, {{ block.settings.background.blue }};
      --primary-button-background: {{ block.settings.button_background.red }}, {{ block.settings.button_background.green }}, {{ block.settings.button_background.blue }};
      --primary-button-text-color: {{ block.settings.button_text_color.red }}, {{ block.settings.button_text_color.green }}, {{ block.settings.button_text_color.blue }};

      {%- assign text_position = block.settings.text_position | split: '_' | first -%}

      {%- case text_position -%}
        {%- when 'top' -%}
          {%- assign section_items_alignment = 'flex-start' -%}
        {%- when 'middle' -%}
          {%- assign section_items_alignment = 'center' -%}
        {%- when 'bottom' -%}
          {%- assign section_items_alignment = 'flex-end' -%}
      {%- endcase -%}

      --section-blocks-alignment: {{ section_items_alignment }};
    }
  {%- endfor -%}

  /*
    IMPLEMENTATION NOTE: due to design requirements, the mobile toolbar (with filters and sort by) had to be moved to the
    layout file. However as section settings cannot be accessed outside the section itself, we simply hide them in CSS.
   */

  {%- if section.settings.show_filters and collection.filters != empty and collection.products_count > 0 -%}
    .mobile-toolbar__item--filters {
      display: flex !important;
    }
  {%- endif -%}

  {%- if section.settings.show_sort_by and collection.products_count > 0 -%}
    .mobile-toolbar__item--sort {
      display: flex !important;
    }
  {%- endif -%}

  {%- if section.settings.show_sort_by or section.settings.show_filters and collection.filters != empty -%}
    @media screen and (max-width: 999px) {
      :root {
        --anchor-offset: 60px;
      }
    }
  {%- endif -%}

  .product-facet__main {width: 100%;}

  .deal-slick {
    --h2: 48px; --h3: 32px; --h: 595px; --vertical-breather: 52px;
    width: 100%; height: calc(var(--h) + var(--vertical-breather)); color: #fff; padding-bottom: var(--vertical-breather);
  }

  .deal-slick .arrow {
    width: 32px; height: 32px; background: rgba(255,255,255,0.7); border-radius: 50%; cursor: pointer; box-shadow: 0px 0px 24px rgba(0,0,0,.14);
    position: absolute; top: 40%; z-index: 2;
    display: flex; justify-content: center; align-items: center; transform: translateY(-50%);
  }

  .deal-slick .arrow-prev {left: 10px;}
  .deal-slick .arrow-next {right: 10px;}
  .deal-slick .arrow svg {
    width: 8px; height: auto; display: block;
    pointer-events: none; -webkit-user-select: none; -moz-user-select: none; user-select: none
  }
  .deal-slick .arrow-next svg {transform: rotateZ(180deg)}

  .deal-slick .slick-dots {
    list-style: none; margin: 0; margin-top: 4vw; padding: 0;
    display: flex; justify-content: center; align-items: center;
  }
  .deal-slick .slick-dots button {display: none}
  .deal-slick .slick-dots li {width: 1.4vw; height: 1.4vw; background: #d9d9d9; margin: 0 .6vw; border-radius: 50%;}
  .deal-slick .slick-dots li.slick-active {background: #2b6fd5;}

  .deal-slick-item {width: 100%; height: var(--h); background-image: linear-gradient(to bottom, #000 60%, #424956 100%); position: relative;}
  .deal-slick-item .text {
    height: max-content; text-align: center; margin: auto; padding: 0 var(--vertical-breather);
    position: absolute; left: 0; right: 0; top: 0; bottom: 0;
  }
  .deal-slick-item h2 {font-size: var(--h2);}
  .deal-slick-item p, .deal-slick-item h3 {font-size: var(--h3);}
  .deal-slick-item h3 {
    color: transparent; background: linear-gradient(to right, #fff, #17d9fc);
    -webkit-background-clip: text;
  }
  .deal-slick-item figure {display: flex; align-items: center; margin: 0; padding: 0;}
  .deal-slick-item figcaption {padding: 0 var(--vertical-breather);}
  .deal-slick-item figure img {width: 40%; height: var(--h); object-fit: cover;}

  @media (min-width: 1025px) {
    .deal-slick .slick-dots {margin-top:2vw}
    .deal-slick .slick-dots li {width: .6vw; height: .6vw; margin: 0 .4vw;}
  }
  @media screen and (max-width: 768px) {
    .deal-slick {
      --h2: 18px; --h3: 12px; --h: 400px;
    }
    .deal-slick-item figure {height: 100%; flex-wrap: wrap;}
    .deal-slick-item figcaption {padding: 0 10px 10px;}
    .deal-slick-item figure img {width: 100%; height: 180px;}
  }
</style>

<section>
  <div class="container">
    <product-facet section-id="{{ section.id }}" class="product-facet">
      {%- if section.settings.show_filters and collection.filters != empty -%}
        {%- if section.settings.filter_position == 'always_visible' -%}
          <div class="product-facet__aside">
            <safe-sticky offset="30" class="product-facet__aside-inner">
              <div class="product-facet__filters-header hidden-pocket">
                <p class="heading {% if settings.heading_text_transform == 'uppercase' %}h6{% else %}h5{% endif %}">{{ 'collection.general.filters' | t }}</p>
              </div>

              {%- render 'facet-filters', filters: collection.filters, filters_position: section.settings.filter_position -%}
            </safe-sticky>
          </div>
        {%- else -%}
          {%- render 'facet-filters', filters: collection.filters, filters_position: section.settings.filter_position -%}
        {%- endif -%}
      {%- endif -%}

      <div id="facet-main" class="product-facet__main anchor" role="region" aria-live="polite">
        {%- if collection.products_count > 0 -%}
          <div class="product-facet__meta-bar anchor">
            {%- if section.settings.filter_position == 'drawer' and section.settings.show_filters and collection.filters != empty -%}
              <button type="submit" is="toggle-button" class="product-facet__meta-bar-item product-facet__meta-bar-item--filter hidden-pocket" aria-controls="facet-filters" aria-expanded="false">
                {%- render 'icon' with 'filters', inline: true -%} {{- 'collection.general.show_filters' | t -}} {% if active_filters_count > 0 %}<span class="product-facet__active-count bubble-count">{{ active_filters_count }}</span>{% endif %}
              </button>
            {%- endif -%}

            {%- comment -%}<span class="product-facet__meta-bar-item product-facet__meta-bar-item--count" role="status">{{ 'collection.general.products_count' | t: count: collection.products_count }}</span>{%- endcomment -%}

            {%- if section.settings.show_sort_by -%}
              <div class="product-facet__meta-bar-item product-facet__meta-bar-item--sort">
                <span class="product-facet__sort-by-title text--subdued hidden-pocket">{{ 'collection.general.sort_by' | t }}</span>

                <div class="popover-container">
                  {%- for option in collection.sort_options -%}
                    {%- if option.value == collection_sort_by -%}
                      {%- assign collection_sort_by_name = option.name -%}
                      {%- break -%}
                    {%- endif -%}
                  {%- endfor -%}

                  <button type="button" is="toggle-button" class="popover-button hidden-pocket" aria-expanded="false" aria-controls="sort-by-popover">
                    <span id="sort-by-selected-value" style="pointer-events: none">{{- collection_sort_by_name -}}</span>
                    {%- render 'icon' with 'chevron', inline: true -%}
                  </button>

                  <sort-by-popover id="sort-by-popover" class="popover">
                    <span class="popover__overlay"></span>

                    <header class="popover__header">
                      <span class="popover__title heading h6">{{- 'collection.general.sort_by' | t -}}</span>

                      <button type="button" class="popover__close-button tap-area tap-area--large" data-action="close" title="{{ 'general.accessibility.close' | t | escape }}">
                        {%- render 'icon' with 'close' -%}
                      </button>
                    </header>

                    <div class="popover__content">
                      <div class="popover__choice-list">
                        {%- for sort_option in collection.sort_options -%}
                          <label class="popover__choice-item">
                            <input type="radio" data-bind-value="sort-by-selected-value" class="visually-hidden" {% if sort_option.value == collection_sort_by %}checked="checked"{% endif %} name="sort_by" value="{{ sort_option.value }}" title="{{ sort_option.name }}">
                            <span class="popover__choice-label">{{ sort_option.name }}</span>
                          </label>
                        {%- endfor -%}
                      </div>
                    </div>
                  </sort-by-popover>
                </div>
              </div>
            {%- endif -%}
          </div>

          {%- if active_filters_count > 0 -%}
            <div class="product-facet__active-list tag-list hidden-tablet-and-up">
              {%- render 'facet-active-filters', filters: collection.filters -%}
            </div>
          {%- endif -%}

          {%- paginate collection.products by section.settings.products_per_page -%}
            <product-list {% if settings.stagger_products_apparition %}stagger-apparition{% endif %} class="product-facet__product-list product-list anchor">
              {%- if section.settings.filter_position == 'always_visible' and section.settings.show_filters and collection.filters != empty -%}
                {%- assign sidebar_width = 305 -%}
              {% else %}
                {%- assign sidebar_width = 0 -%}
              {%- endif -%}

              <div class="product-list__inner">
                {%- assign desktop_number_of_products_minus_one = section.settings.desktop_products_per_row | minus: 1 -%}
                {%- assign gap_width = 24.0 | divided_by: section.settings.desktop_products_per_row | times: desktop_number_of_products_minus_one -%}
                {%- capture sizes_attribute -%}(max-width: 740px) calc({{ 100.0 | divided_by: section.settings.mobile_products_per_row | ceil }}vw - 24px), calc((min(100vw - 80px, 1520px) - {{ sidebar_width }}px) / {{ section.settings.desktop_products_per_row }} - {{ gap_width | ceil }}px){%- endcapture -%}
                
                {%- if section.blocks.size > 0 -%}
                  {% assign p_first = section.blocks | first %}
                  {%- if p_first.settings.image != blank and p_first.settings.link_url != blank -%}
                  <div class="promotion-banner">
                    <a href="{{ p_first.settings.link_url }}">
                      <img class="none-mb" loading="lazy" src="{{ p_first.settings.image | img_url: 'master' }}">
                      <img class="none-pc" loading="lazy" src="{{ p_first.settings.image_m | img_url: 'master' }}">
                    </a>
                  </div>
                  {%- endif -%}
                {%- endif -%}

                {%- for product in collection.products -%}

                  {%- if section.blocks.size > 1 and forloop.index0 == 4 -%}
                    {% assign p_last = section.blocks | last %}
                    {%- if p_last.settings.image != blank and p_last.settings.link_url != blank -%}
                    <div class="promotion-banner promotion-2">
                      <a href="{{ p_last.settings.link_url }}">
                        <img class="none-mb" loading="lazy" src="{{ p_last.settings.image | img_url: 'master' }}">
                        <img class="none-pc" loading="lazy" src="{{ p_last.settings.image_m | img_url: 'master' }}">
                      </a>
                    </div>
                    {%- endif -%}
                  {%- endif -%}

                  {%- render 'product-item', product: product, collection: collection, block: block, sizes_attribute: sizes_attribute, reveal: settings.stagger_products_apparition -%}
                {%- endfor -%}
              </div>
            </product-list>

            {%- render 'pagination', paginate: paginate, use_ajax: true -%}
          {%- endpaginate -%}

        {%- else -%}
          <div class="empty-state">
            {%- if collection.all_products_count == 0 -%}
              <h3 class="heading h4">{{ 'collection.general.empty_title' | t }}</h3>
              <p>{{ 'collection.general.empty_label' | t }}</p>

              <div class="button-wrapper">
                <a href="{{ routes.all_products_collection_url }}" class="button button--primary">{{ 'collection.general.empty_button' | t }}</a>
              </div>
            {%- else -%}
              <h3 class="heading h4">{{ 'collection.general.no_results_title' | t }}</h3>
              <p>{{ 'collection.general.no_results_label' | t }}</p>

              <div class="button-wrapper">
                <a href="{{ collection.url }}?sort_by={{ collection_sort_by }}" data-action="clear-filters" class="button button--primary">{{ 'collection.general.no_results_button' | t }}</a>
              </div>
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </product-facet>
  </div>
</section>

{% schema %}
{
  "name": "Collection page for deal", "class": "shopify-section--main-collection", "max_blocks": 2,
  "blocks": [
    {
      "type": "image", "name": "Promotion block",
      "settings": [
        {
          "type": "image_picker", "id": "image", "label": "Image",
          "info": "1800 x 900px .jpg recommended"
        },
        {
          "type": "image_picker", "id": "image_m", "label": "Image mobile",
          "info": "1:1 recommended"
        },
        {"type": "url", "id": "link_url", "label": "Link URL"}
      ]
    }
  ],
  "settings": [
    {"type": "checkbox", "id": "show_sort_by", "label": "Show sort by", "default": true},
    {"type": "range", "id": "products_per_page", "label": "Products per page", "min": 8, "max": 50, "step": 1, "default": 24},
    {
      "type": "select", "id": "mobile_products_per_row", "label": "Products per row (mobile)",
      "options": [
        {"value": "1", "label": "1"},
        {"value": "2", "label": "2"}
      ],
      "default": "2"
    },
    {
      "type": "range", "id": "desktop_products_per_row", "label": "Products per row (desktop)",
      "min": 3, "max": 5, "default": 4
    },

    {"type": "header", "content": "Filters"},
    {"type": "checkbox", "id": "show_filters", "label": "Show filters", "info": "[Customize filters](/admin/menus)", "default": true},
    {
      "type": "checkbox", "id": "show_filter_group_name", "label": "Show group name",
      "info": "Group name will be shown inside selected filters.",
      "default": false
    },
    {"type": "checkbox", "id": "show_color_swatch", "label": "Show filter color swatch", "default": true},
    {"type": "checkbox", "id": "open_first_filter_group", "label": "Open first group by default", "default": false},
    {
      "type": "select", "id": "filter_position", "label": "Position",
      "options": [
        {"value": "always_visible", "label": "Always visible"},
        {"value": "drawer", "label": "Drawer"}
      ],
      "default": "always_visible"
    }
  ]
}
{% endschema %}